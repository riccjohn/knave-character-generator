{"version":3,"sources":["styled_components/Subtitle.ts","styled_components/Table.ts","styled_components/Title.ts","dice/Dice.ts","character_generation/Description.ts","character_generation/Gear.ts","character_generation/Randomization.ts","character_generation/Character.ts","context/CharacterContext.tsx","components/Abilities/Abilities.tsx","components/Description/Description.styles.ts","components/Description/Description.tsx","components/Footer/Footer.styles.ts","components/Footer/Footer.tsx","fonts/Sebaldus-Gotisch.woff","fonts/Sebaldus-Gotisch.woff2","fonts/fonts.ts","components/Shell.tsx","components/Items/Items.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Subtitle","styled","h2","displayName","StyledTable","table","Title","h1","Dice","roll","dieSize","numberOfDice","rolls","Array","fill","undefined","map","randomNumber","reduce","acc","curr","max","Math","floor","random","Description","traits","this","generateRandomTraits","Object","keys","traitsData","Randomization","getRandomItem","Gear","itemSlots","items","armor","weapon","itemSlotsUsed","getRandomArmor","slotsRemaining","availableArmor","armorList","filter","slots","getRandomWeapon","availableWeapons","weaponList","weapons","getRandomGear","dg","gearList","dungeoneeringGear","gen1","generalGearSetOne","gen2","generalGearSetTwo","el","generalGear1","generalGear2","name","count","type","list","length","Character","copperPieces","gender","level","maxHp","abilities","generate","generateAbilities","rollForCopperPieces","randomGender","constitution","defense","rollHitPoints","gear","rollAbilityScore","charisma","dexterity","intelligence","strength","wisdom","bonus","min","generateTraits","quality","damage","hand","CharacterContext","React","createContext","character","AbilityRow","props","label","lowerCaseLabel","toLowerCase","role","Abilities","abilityScores","useContext","Table","StyledDescription","div","className","trait","sentenceCaseTrait","toUpperCase","slice","adjective","sentenceCaseAdjective","StyledFooter","Footer","href","createGlobalStyle","SebaldusGotischWOFF","SebaldusGotischWOFF2","Shell","children","charContext","Provider","value","ItemRow","item","kebabCaseName","split","join","Items","maxItemSlots","idx","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec80fa76.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Subtitle = styled.h2`\n  font-family: SebaldusGotisch;\n  font-size: 2em;\n  font-weight: normal;\n  color: black;\n`\n\nSubtitle.displayName = \"Subtitle\"\n\nexport default Subtitle\n","import styled from \"styled-components\"\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  width: 50%;\n  table-layout: fixed;\n\n  thead tr {\n    background: black;\n    color: white;\n  }\n\n  thead th {\n    padding: 0.5em 0;\n  }\n\n  tr:nth-child(even) {\n    background: #dbdbdb;\n  }\n\n  td,\n  th {\n    padding: 0.5em 0;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n  }\n`\n\nStyledTable.displayName = \"StyledTable\"\n\nexport default StyledTable\n","import styled from \"styled-components\"\n\nconst Title = styled.h1`\n  font-family: SebaldusGotisch;\n  font-size: 3em;\n  font-weight: normal;\n  color: black;\n`\n\nTitle.displayName = \"Title\"\n\nexport default Title\n","class Dice {\n  public static roll = (dieSize: number, numberOfDice: number = 1): number => {\n    const rolls = new Array(numberOfDice)\n      .fill(undefined)\n      .map(() => Dice.randomNumber(dieSize))\n\n    return rolls.reduce((acc, curr) => acc + curr, 0)\n  }\n\n  private static randomNumber = (max: number): number => {\n    return Math.floor(Math.random() * max + 1)\n  }\n}\n\nexport default Dice\n","import traitsData from \"character_generation/data/traits.json\"\nimport { Randomization } from \"character_generation\"\n\nclass Description {\n  public traits\n\n  constructor() {\n    this.traits = this.generateRandomTraits()\n  }\n\n  private generateRandomTraits() {\n    const nouns: string[] = Object.keys(traitsData)\n\n    const randomTraits: Record<INoun, string> = nouns.reduce(\n      (acc: Record<string, string>, curr: string) => {\n        acc[curr] = Randomization.getRandomItem(traitsData[curr as INoun])\n        return acc\n      },\n      {}\n    )\n\n    return randomTraits\n  }\n}\n\nexport default Description\n","import armorList from \"character_generation/data/armor.json\"\nimport gearList from \"character_generation/data/gear.json\"\nimport weaponList from \"character_generation/data/weapons.json\"\nimport { Randomization } from \"character_generation\"\n\nclass Gear {\n  public itemSlots: number\n  public items: IGear[]\n  public armor: IArmor\n  public weapon: IWeapon\n  private itemSlotsUsed: number\n\n  constructor(itemSlots: number) {\n    // Order matters! this.getRandomGear must be last\n    this.itemSlots = itemSlots\n    this.itemSlotsUsed = 6\n    this.armor = this.getRandomArmor()\n    this.weapon = this.getRandomWeapon()\n    this.items = this.getRandomGear()\n  }\n\n  private getRandomArmor = (): IArmor => {\n    const slotsRemaining = this.itemSlots - this.itemSlotsUsed\n\n    const availableArmor = (armorList.armor as IArmor[]).filter(armor => {\n      // Ensures there is at least 1 slot remaining for a weapon to be added\n      return armor.slots < slotsRemaining\n    })\n    const armor = Randomization.getRandomItem(availableArmor)\n    this.itemSlotsUsed += armor.slots\n    return armor\n  }\n\n  private getRandomWeapon = (): IWeapon => {\n    const slotsRemaining = this.itemSlots - this.itemSlotsUsed\n    const availableWeapons = (weaponList.weapons as IWeapon[]).filter(\n      weapon => {\n        return weapon.slots <= slotsRemaining\n      }\n    )\n    const weapon = Randomization.getRandomItem(availableWeapons)\n    this.itemSlotsUsed += weapon.slots\n    return weapon\n  }\n\n  private getRandomGear(): IGear[] {\n    const dg = gearList.dungeoneeringGear as IGear[]\n    const gen1 = gearList.generalGearSetOne as IGear[]\n    const gen2 = gearList.generalGearSetTwo as IGear[]\n\n    const startingGear: IGear[] = [\n      { name: \"rations\", count: 1, slots: 1, type: \"food\" },\n      { name: \"rations\", count: 1, slots: 1, type: \"food\" },\n    ]\n\n    const dungeoneeringGear: IGear[] = new Array(2)\n      .fill(undefined)\n      .map(el => Randomization.getRandomItem(dg))\n\n    const generalGear1 = Randomization.getRandomItem(gen1)\n    const generalGear2 = Randomization.getRandomItem(gen2)\n\n    // TODO: refactor so this isn't dependent on getRandomArmor being called first in the constructor\n    return [\n      ...startingGear,\n      ...dungeoneeringGear,\n      generalGear1,\n      generalGear2,\n      this.armor,\n      this.weapon,\n    ]\n  }\n}\n\nexport default Gear\n","class Randomization {\n  public static getRandomItem = <T>(list: T[]): T => {\n    const length = list.length\n    const randomIndex = Math.floor(Math.random() * length)\n    return list[randomIndex]\n  }\n}\n\nexport default Randomization\n","import Dice from \"dice/Dice\"\nimport { Description, Gear, Randomization } from \"character_generation\"\n\nclass Character {\n  public armor: IArmor\n  public copperPieces: number\n  public gender: IGender\n  public items: IGear[]\n  public itemSlots: number\n  public level: number\n  public maxHp: number\n  public traits: ITraits\n  public weapon: IWeapon\n\n  private abilities: IAbilities\n\n  constructor() {\n    this.abilities = {\n      charisma: { bonus: 3, defense: 13 },\n      constitution: { bonus: 3, defense: 13 },\n      dexterity: { bonus: 3, defense: 13 },\n      intelligence: { bonus: 3, defense: 13 },\n      strength: { bonus: 3, defense: 13 },\n      wisdom: { bonus: 3, defense: 13 },\n    }\n\n    this.armor = {\n      count: 0,\n      defense: 0,\n      name: \"\",\n      quality: 0,\n      slots: 0,\n      type: \"armor\",\n    }\n    this.copperPieces = 0\n    this.gender = \"non-binary\"\n    this.items = [{ name: \"\", count: 0, type: \"food\", slots: 0 }]\n    this.itemSlots = 0\n    this.level = 0\n    this.maxHp = 0\n    this.traits = this.generateTraits()\n    this.weapon = {\n      count: 1,\n      damage: \"d6\",\n      hand: 1,\n      name: \"\",\n      quality: 0,\n      slots: 1,\n      type: \"weapon\",\n    }\n  }\n\n  public generate = (): void => {\n    this.level = 1\n    this.abilities = this.generateAbilities()\n    this.copperPieces = this.rollForCopperPieces()\n    this.gender = this.randomGender()\n    this.itemSlots = this.constitution.defense\n    this.maxHp = this.rollHitPoints()\n\n    const gear = new Gear(this.itemSlots)\n\n    this.items = gear.items\n    this.armor = gear.armor\n    this.weapon = gear.weapon\n  }\n\n  public get abilityScores() {\n    return this.abilities\n  }\n\n  public get charisma() {\n    return this.abilities.charisma\n  }\n\n  public get constitution() {\n    return this.abilities.constitution\n  }\n\n  public get dexterity() {\n    return this.abilities.dexterity\n  }\n\n  public get intelligence() {\n    return this.abilities.intelligence\n  }\n\n  public get strength() {\n    return this.abilities.strength\n  }\n\n  public get wisdom() {\n    return this.abilities.wisdom\n  }\n\n  // END PUBLIC METHODS\n\n  private rollForCopperPieces = () => {\n    return Dice.roll(6, 3) + 20\n  }\n\n  private rollHitPoints = () => {\n    return Dice.roll(8)\n  }\n\n  private generateAbilities = (): IAbilities => {\n    const [charisma, constitution, dexterity, intelligence, strength, wisdom] =\n      Array(6).fill(undefined).map(this.rollAbilityScore)\n\n    const abilities = {\n      charisma: { bonus: charisma, defense: charisma + 10 },\n      constitution: { bonus: constitution, defense: constitution + 10 },\n      dexterity: { bonus: dexterity, defense: dexterity + 10 },\n      intelligence: { bonus: intelligence, defense: intelligence + 10 },\n      strength: { bonus: strength, defense: strength + 10 },\n      wisdom: { bonus: wisdom, defense: wisdom + 10 },\n    }\n\n    return abilities\n  }\n\n  private rollAbilityScore = (): number => {\n    const rolls = new Array(3).fill(undefined).map(() => Dice.roll(6))\n    return Math.min(...rolls)\n  }\n\n  private randomGender = (): IGender => {\n    const genders: IGender[] = [\n      \"cis-male\",\n      \"cis-female\",\n      \"non-binary\",\n      \"transgender\",\n      \"two-spirit\",\n      \"genderqueer\",\n      \"gender-fluid\",\n      \"gender-neutral\",\n    ]\n\n    return Randomization.getRandomItem(genders)\n  }\n\n  private generateTraits = (): ITraits => {\n    return new Description().traits\n  }\n}\n\nexport default Character\n","import React from \"react\"\nimport Character from \"character_generation/Character\"\n\nexport interface ICharacterContext {\n  character: Character\n}\n\nconst CharacterContext = React.createContext<ICharacterContext>({\n  character: new Character(),\n})\n\nexport default CharacterContext\n","import React, { useContext } from \"react\"\nimport { Subtitle, Table } from \"styled_components\"\nimport CharacterContext from \"context/CharacterContext\"\n\nconst Abilities: React.FC = () => {\n  const context = useContext(CharacterContext)\n  const { character } = context\n  const abilityScores: IAbilities = character.abilityScores\n\n  const { charisma, constitution, dexterity, intelligence, strength, wisdom } =\n    abilityScores\n\n  return (\n    <>\n      <Subtitle>Ability Scores</Subtitle>\n      <Table>\n        <thead>\n          <tr role=\"row\">\n            <th role=\"cell\">Defense</th>\n            <th role=\"cell\">Ability</th>\n            <th role=\"cell\">Bonus</th>\n          </tr>\n        </thead>\n        <tbody>\n          <AbilityRow\n            label=\"STR\"\n            bonus={strength.bonus}\n            defense={strength.defense}\n          />\n          <AbilityRow\n            label=\"DEX\"\n            bonus={dexterity.bonus}\n            defense={dexterity.defense}\n          />\n          <AbilityRow\n            label=\"CON\"\n            bonus={constitution.bonus}\n            defense={constitution.defense}\n          />\n          <AbilityRow\n            label=\"INT\"\n            bonus={intelligence.bonus}\n            defense={intelligence.defense}\n          />\n          <AbilityRow\n            label=\"WIS\"\n            bonus={wisdom.bonus}\n            defense={wisdom.defense}\n          />\n          <AbilityRow\n            label=\"CHA\"\n            bonus={charisma.bonus}\n            defense={charisma.defense}\n          />\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\ninterface IAbilityRowProps {\n  defense: number\n  label: string\n  bonus: number\n}\n\nconst AbilityRow = (props: IAbilityRowProps) => {\n  const { bonus, defense, label } = props\n  const lowerCaseLabel = label.toLowerCase()\n\n  return (\n    <tr data-testid={`${lowerCaseLabel}-row`} role=\"row\">\n      <td role=\"cell\">{defense}</td>\n      <th role=\"cell\">{label}</th>\n      <td role=\"cell\">{bonus}</td>\n    </tr>\n  )\n}\n\nexport default Abilities\n","import styled from \"styled-components\"\n\nconst StyledDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 50%;\n\n  .traits {\n    display: flex;\n    flex-wrap: wrap;\n\n    p {\n      width: fit-content;\n\n      span {\n        font-family: SebaldusGotisch;\n        font-size: 1.1em;\n      }\n\n      padding: 0.25em 0.5em;\n      margin: 0.5em;\n    }\n  }\n`\n\nStyledDescription.displayName = \"StyledDescription\"\n\nexport default StyledDescription\n","import CharacterContext from \"context/CharacterContext\"\nimport React, { useContext } from \"react\"\nimport { Subtitle } from \"styled_components\"\nimport StyledDescription from \"./Description.styles\"\n\nconst Description: React.FC = () => {\n  const context = useContext(CharacterContext)\n  const { character } = context\n  const { traits } = character\n\n  return (\n    <StyledDescription>\n      <Subtitle>Traits</Subtitle>\n      <div className=\"traits\">\n        {Object.keys(traits as ITraits).map((trait: string) => {\n          const sentenceCaseTrait = trait[0].toUpperCase() + trait.slice(1)\n          const adjective = traits[trait as INoun]\n          const sentenceCaseAdjective =\n            adjective[0].toUpperCase() + adjective.slice(1)\n\n          return (\n            <p key={trait} data-testid={trait}>\n              <span>{`${sentenceCaseTrait}:`}</span>\n              {` ${sentenceCaseAdjective}`}\n            </p>\n          )\n        })}\n      </div>\n    </StyledDescription>\n  )\n}\n\nexport default Description\n","import styled from \"styled-components\"\n\nconst StyledFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 1.5em 0;\n\n  p {\n    margin: 0 1em;\n  }\n\n  a {\n    color: dodgerblue;\n  }\n`\n\nStyledFooter.displayName = \"StyledFooter\"\n\nexport default StyledFooter\n","import React from \"react\"\nimport StyledFooter from \"./Footer.styles\"\n\nconst Footer: React.FC = () => {\n  return (\n    <StyledFooter data-testid=\"footer\">\n      <p>\n        {\"Based on \"}\n        <a href=\"https://www.drivethrurpg.com/product/250888/Knave\">Knave</a>\n        {\" by \"}\n        <a href=\"http://questingblog.com/\">Ben Milton</a>\n      </p>\n      <p>\n        {\"Developed with ♥ in Madison, WI by \"}\n        <a href=\"https://www.github.com/riccjohn\">John Riccardi</a>\n      </p>\n    </StyledFooter>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/Sebaldus-Gotisch.b7fba9af.woff\";","export default __webpack_public_path__ + \"static/media/Sebaldus-Gotisch.4bb1e1aa.woff2\";","import { createGlobalStyle } from \"styled-components\"\n\nimport SebaldusGotischWOFF from \"./Sebaldus-Gotisch.woff\"\nimport SebaldusGotischWOFF2 from \"./Sebaldus-Gotisch.woff2\"\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'SebaldusGotisch';\n        src: local('SebaldusGotisch'), local('SebaldusGotisch'),\n        url(${SebaldusGotischWOFF}) format('woff2'),\n        url(${SebaldusGotischWOFF2}) format('woff');\n        font-weight: 300;\n        font-style: normal;\n    }\n`\n","import React from \"react\"\n\nimport Character from \"character_generation/Character\"\nimport CharacterContext, { ICharacterContext } from \"context/CharacterContext\"\nimport GlobalFonts from \"fonts/fonts\"\n\ninterface IProps {\n  character: Character\n  children: React.ReactElement<unknown>\n}\n\nconst Shell: React.FC<IProps> = ({ character, children }) => {\n  const charContext: ICharacterContext = {\n    character,\n  }\n\n  return (\n    <CharacterContext.Provider value={charContext}>\n      <GlobalFonts />\n      {children}\n    </CharacterContext.Provider>\n  )\n}\n\nexport default Shell\n","import CharacterContext from \"context/CharacterContext\"\nimport React, { useContext } from \"react\"\nimport { Subtitle, Table } from \"styled_components\"\n\nconst Items: React.FC = () => {\n  const context = useContext(CharacterContext)\n  const { character } = context\n  const { items } = character\n  const maxItemSlots = character.itemSlots\n  const itemSlotsUsed = character.items.reduce(\n    (acc, curr) => acc + curr.slots,\n    0\n  )\n\n  return (\n    <>\n      <Subtitle>Items</Subtitle>\n      <p data-testid=\"item-slots-used\">\n        {`Item Slots Used: ${itemSlotsUsed}/${maxItemSlots}`}\n      </p>\n      <Table data-testid=\"item-table\">\n        <thead>\n          <tr role=\"row\">\n            <th role=\"cell\" data-testid=\"item-name-heading\">\n              Item\n            </th>\n            <th role=\"cell\" data-testid=\"item-defense-heading\">\n              Defense\n            </th>\n            <th role=\"cell\" data-testid=\"item-damage-heading\">\n              Damage\n            </th>\n            <th role=\"cell\" data-testid=\"item-slots-heading\">\n              Slots\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item: any, idx) => (\n            <ItemRow item={item} key={item.name + idx} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\ninterface IItem {\n  count: number\n  name: string\n  defense?: number\n  damage?: number\n  slots: number\n}\ninterface IItemRowProps {\n  item: IItem\n}\n\nconst ItemRow: React.FC<IItemRowProps> = ({ item }) => {\n  const kebabCaseName = item.name.toLowerCase().split(\" \").join(\"-\")\n  return (\n    <tr data-testid={`${kebabCaseName}-row`} role=\"row\">\n      <td role=\"cell\">{item.name}</td>\n      <td role=\"cell\">{item.defense ? item.defense : \"-\"}</td>\n      <td role=\"cell\">{item.damage ? item.damage : \"-\"}</td>\n      <td role=\"cell\">{item.slots}</td>\n    </tr>\n  )\n}\n\nexport default Items\n","import React from \"react\"\nimport { Abilities, Description, Footer, Shell } from \"./components\"\nimport Character from \"character_generation/Character\"\nimport { Title } from \"styled_components\"\nimport styled from \"styled-components\"\nimport Items from \"components/Items\"\n\nconst App: React.FC = () => {\n  const character = new Character()\n  character.generate()\n\n  return (\n    <Shell character={character}>\n      <Layout>\n        <Title data-testid=\"page-title\">Knave</Title>\n        <Description />\n        <Items />\n        <Abilities />\n        <Footer />\n      </Layout>\n    </Shell>\n  )\n}\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 100vh;\n`\n\nLayout.displayName = \"Layout\"\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}